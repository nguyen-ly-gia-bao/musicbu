name: Rotate MP3 (Auto Random)

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [rotate]

permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

jobs:
  rotate:
    runs-on: ubuntu-latest
    timeout-minutes: 720

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pick random track
        id: pick
        shell: bash
        run: |
          set -e
          FILE=playlist.txt
          [ ! -f "$FILE" ] && echo "::error::playlist.txt missing" && exit 1
          LINES=$(wc -l < "$FILE")
          [ "$LINES" -lt 1 ] && echo "::error::playlist.txt empty" && exit 1
          PICK=$(( RANDOM % LINES + 1 ))
          LINE=$(sed -n "${PICK}p" "$FILE")
          URL=$(echo "$LINE" | cut -d'|' -f1 | xargs)
          DUR=$(echo "$LINE" | cut -d'|' -f2 | xargs)
          [ -z "$URL" ] && echo "::error::Bad line: $LINE" && exit 1
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "duration=$DUR" >> $GITHUB_OUTPUT
          echo "Picked: $URL | $DUR"

      - name: Write source_url.txt
        run: echo "${{ steps.pick.outputs.url }}" > source_url.txt

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Convert duration to seconds (fallback 600s)
        id: dur
        shell: bash
        run: |
          dur="${{ steps.pick.outputs.duration }}"
          secs=0
          [[ "$dur" =~ ([0-9]+)h ]] && secs=$((secs + ${BASH_REMATCH[1]}*3600))
          [[ "$dur" =~ ([0-9]+)m ]] && secs=$((secs + ${BASH_REMATCH[1]}*60))
          [[ "$dur" =~ ([0-9]+)s ]] && secs=$((secs + ${BASH_REMATCH[1]}))
          [ "$secs" -le 0 ] && secs=600
          echo "wait=$secs" >> $GITHUB_OUTPUT
          echo "Will wait $secs seconds"

      - name: Wait for next rotation
        run: sleep ${{ steps.dur.outputs.wait }}

      - name: Trigger next run
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          curl -s -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"rotate"}'
