name: Rotate MP3 (No-Repeat, Skip Dead Links) and Deploy

on:
  workflow_dispatch:
  push:
    paths:
      - 'playlist.txt'
      - '.github/workflows/deploy.yml'
  schedule:
    - cron: "*/90 * * * *"  # đổi bài mỗi 1h30

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pick and download a LIVE track (random among unplayed)
        id: pick
        shell: bash
        run: |
          set -e

          # --- Load playlist (strip blank lines)
          if [ ! -s playlist.txt ]; then
            echo "playlist.txt is empty or missing"; exit 1
          fi
          mapfile -t LINES < <(awk 'NF{print}' playlist.txt)
          TOTAL=${#LINES[@]}
          if [ "$TOTAL" -le 0 ]; then
            echo "No valid lines in playlist.txt"; exit 1
          fi

          # --- Build 'unplayed' set using played.txt
          declare -A USED
          if [ -f played.txt ]; then
            while IFS= read -r idx; do
              [[ "$idx" =~ ^[0-9]+$ ]] && USED[$idx]=1
            done < played.txt
          fi

          avail=()
          for ((i=0;i<TOTAL;i++)); do
            if [ -z "${USED[$i]}" ]; then
              avail+=("$i")
            fi
          done

          # If all played -> reset cycle
          if [ "${#avail[@]}" -eq 0 ]; then
            echo "All tracks were played. Resetting..."
            : > played.txt
            for ((i=0;i<TOTAL;i++)); do avail+=("$i"); done
          fi

          # --- Shuffle 'avail' and try until a LIVE link is found
          mkdir -p public/f
          tmpfile="public/f/.tmp_download.mp3"
          touch "$tmpfile"

          # Shuffle indices
          mapfile -t shuffled < <(printf "%s\n" "${avail[@]}" | shuf)

          success=0
          picked_index=-1
          for idx in "${shuffled[@]}"; do
            url="${LINES[$idx]}"
            echo "Trying index $idx: $url"
            # --fail: non-2xx = error; -L follow redirects; retries for hiccups
            if curl --fail -L --retry 2 --retry-delay 2 --max-time 60 \
               -o "$tmpfile" "$url"; then
              if [ -s "$tmpfile" ]; then
                mv -f "$tmpfile" "public/f/xz8cvuf.mp3"
                success=1
                picked_index="$idx"
                echo "Picked LIVE index: $picked_index"
                break
              fi
            else
              echo "Dead link at index $idx, skipping."
            fi
          done
          rm -f "$tmpfile" || true

          if [ "$success" -ne 1 ]; then
            echo "No LIVE links found this run. Keeping previous track."
            exit 0  # do not fail the job; keep old mp3
          fi

          # Export for next step
          echo "index=$picked_index" >> "$GITHUB_OUTPUT"

      - name: Update played list and commit (only when success)
        if: steps.pick.outputs.index != ''
        shell: bash
        run: |
          echo "${{ steps.pick.outputs.index }}" >> played.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add played.txt
          git commit -m "Played index ${{ steps.pick.outputs.index }}" || echo "No changes"
          git push || echo "No push needed"

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
