name: Rotate MP3 (Playlist Duration)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [rotate]

jobs:
  rotate:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pick random track from playlist
        id: pick
        run: |
          FILE=playlist.txt
          [ ! -f "$FILE" ] && echo "playlist.txt not found!" && exit 1
          LINES=($(wc -l < $FILE))
          PICK=$(( RANDOM % LINES + 1 ))
          LINE=$(sed -n "${PICK}p" $FILE)
          URL=$(echo "$LINE" | cut -d'|' -f1 | xargs)
          DUR=$(echo "$LINE" | cut -d'|' -f2 | xargs)
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "duration=$DUR" >> $GITHUB_OUTPUT
          echo "Picked: $URL ($DUR)"

      - name: Create source_url.txt
        run: echo "${{ steps.pick.outputs.url }}" > source_url.txt

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          path: .

      - name: Convert duration to seconds
        id: dur
        run: |
          dur="${{ steps.pick.outputs.duration }}"
          secs=0
          [[ "$dur" =~ ([0-9]+)h ]] && secs=$(( ${BASH_REMATCH[1]} * 3600 ))
          [[ "$dur" =~ ([0-9]+)m ]] && secs=$(( secs + ${BASH_REMATCH[1]} * 60 ))
          echo "wait=$secs" >> $GITHUB_OUTPUT
          echo "Will wait $secs seconds before next rotation"

      - name: Wait for next rotation
        run: sleep ${{ steps.dur.outputs.wait }}

      - name: Trigger next run
        env:
          GH_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -s -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_PAT" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"rotate"}'
