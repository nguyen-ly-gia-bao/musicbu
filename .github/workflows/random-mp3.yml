name: MusicBu Radio ‚Äì current.mp3 (random & loop)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [rotate]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: musicbu-radio
  cancel-in-progress: true

jobs:
  radio:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pick 1 random track
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          FILE="playlist.txt"
          [ -s "$FILE" ] || { echo "playlist.txt is missing/empty"; exit 1; }

          LINE=$(shuf -n 1 "$FILE")
          URL=$(echo "$LINE" | cut -d'|' -f1 | xargs)
          DUR_RAW=$(echo "$LINE" | cut -d'|' -f2 | xargs || true)
          [ -z "${DUR_RAW:-}" ] && DUR_RAW="30m"

          H=$(echo "$DUR_RAW" | grep -oE '[0-9]+h' | tr -d h || true); H=${H:-0}
          M=$(echo "$DUR_RAW" | grep -oE '[0-9]+m' | tr -d m || true); M=${M:-0}
          S=$(echo "$DUR_RAW" | grep -oE '[0-9]+s' | tr -d s || true); S=${S:-0}
          if [ "$H" = 0 ] && [ "$M" = 0 ] && [ "$S" = 0 ]; then
            [[ "$DUR_RAW" =~ ^[0-9]+$ ]] && S="$DUR_RAW" || M=30
          fi
          SECS=$((H*3600 + M*60 + S))
          [ "$SECS" -lt 30 ] && SECS=30

          echo "url=$URL"      >> "$GITHUB_OUTPUT"
          echo "dur_str=$DUR_RAW" >> "$GITHUB_OUTPUT"
          echo "secs=$SECS"    >> "$GITHUB_OUTPUT"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Build site (download to /f/current.mp3)
        shell: bash
        run: |
          set -euo pipefail
          URL='${{ steps.pick.outputs.url }}'
          DUR='${{ steps.pick.outputs.dur_str }}'
          mkdir -p public/f
          echo "‚¨áÔ∏è  Downloading: $URL"
          curl -L --fail --retry 3 "$URL" -o public/f/current.mp3

          # Trang ch√≠nh ph√°t current.mp3
          cat > public/index.html <<HTML
          <!doctype html>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width,initial-scale=1">
          <title>üéß MusicBu Radio</title>
          <h1 style="font-family:system-ui;color:#58a6ff">üéß MusicBu Radio</h1>
          <p>Now playing (stable link): <code>/musicbu/f/current.mp3</code></p>
          <audio controls autoplay style="width:100%;max-width:720px">
            <source src="./f/current.mp3" type="audio/mpeg">
          </audio>
          <p>‚è± Duration: <b>${DUR}</b></p>
          <style>body{font-family:system-ui,Segoe UI,Roboto,Arial;background:#0d1117;color:#c9d1d9;padding:24px;max-width:900px;margin:auto}</style>
          HTML

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

      - name: Sleep until next track
        run: |
          echo "Sleeping ${{ steps.pick.outputs.secs }} seconds‚Ä¶"
          sleep ${{ steps.pick.outputs.secs }}

      - name: Dispatch next run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          curl -sS -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/dispatches \
            -d '{"event_type":"rotate"}'
          echo "Next rotation dispatched."
